<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction :: go-testdeep</title><link>https://go-testdeep.zetta.rocks/introduction/index.html</link><description>Synopsis Make golang tests easy, from simplest usage:
import ( "testing" "github.com/maxatome/go-testdeep/td" ) func TestMyFunc(t *testing.T) { td.Cmp(t, MyFunc(), &amp;Info{Name: "Alice", Age: 42}) } To a bit more complex one, allowing flexible comparisons using TestDeep operators:
import ( "testing" "github.com/maxatome/go-testdeep/td" ) func TestMyFunc(t *testing.T) { td.Cmp(t, MyFunc(), td.Struct( &amp;Info{Name: "Alice"}, td.StructFields{ "Age": td.Between(40, 45), }, )) } Or anchoring operators directly in literals, as in:
import ( "testing" "github.com/maxatome/go-testdeep/td" ) func TestMyFunc(tt *testing.T) { t := td.NewT(tt) t.Cmp(MyFunc(), &amp;Info{ Name: "Alice", Age: t.Anchor(td.Between(40, 45)).(int), }) } To most complex one, allowing to easily test HTTP API routes, using flexible operators and the tdhttp helper:</description><generator>Hugo</generator><language>en-us</language><atom:link href="https://go-testdeep.zetta.rocks/introduction/index.xml" rel="self" type="application/rss+xml"/></channel></rss>